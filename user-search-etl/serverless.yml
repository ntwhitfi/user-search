app: user-search

service:
  name: user-search-etl
  description: |
    This service is used to transform and push records to the user search table

frameworkVersion: ">=1.9.0 <2.0.0"

custom:
  props: ${file(env_config/${opt:stage, self:provider.stage}.yml)}

package:
  artifact: ${self:custom.props.artifactPath}

provider:
  name: aws
  runtime: java8
  stage: dev
  region: ${self:custom.props.region}
  memorySize: ${self:custom.props.memorySize}
  timeout: ${self:custom.props.timeout}
  deploymentBucket: ${self:custom.props.deploymentBucketName}
  role: ${self:custom.props.lambdaRole}

functions:
  UserETLHandler:
    handler: ntwhitfi.user.search.etl.handler.UserETLHandler
    name: UserETLHandler-${opt:stage, self:provider.stage}
    environment:
      ROLE_TO_DEPARTMENT_MAP: ${self:custom.props.roleToDepartmentMap}
      USER_ETL_START_COMMAND: ${self:custom.props.userETLStartCommand}
    events:
      - schedule:
          rate: rate(24 hours)
          enabled: true
          input:
            command: start
            
resources:
  Resources:
    #Create SNS topic to handle sending the CloudWatch alarms
    UserETLHandlerSNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: UserETLSNSTopic-${opt:stage, self:provider.stage}
        Subscription:
          - Endpoint: ${self:custom.props.sns.endpoint}
            Protocol: ${self:custom.props.sns.protocol}
        Tags: ${self:custom.props.tags}
        TopicName: UserETLSNSTopic-${opt:stage, self:provider.stage}

    #UserETLHandler CloudWatch Alarms.

    #Alarm to detect execution errors or errors invoking the lambda function
    UserETLHandlerInvocationErrorAlarm:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
        AlarmDescription: "An error occurred while invoking the UserETLHandler Lambda function."
        AlarmName:
          UserETLHandler-${opt:stage, self:provider.stage}-ErrorAlarm
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Dimensions:
          - Name: FunctionName
            Value: UserETLHandler-${opt:stage, self:provider.stage}
        EvaluationPeriods: 1
        MetricName: "Errors"
        Namespace: AWS/Lambda
        AlarmActions:
          - !Ref UserETLHandlerSNSTopic
        OKActions:
          - !Ref UserETLHandlerSNSTopic
        Period: 300
        Statistic: Sum
        Threshold: 1
        TreatMissingData: notBreaching

    #Alarm for excessive invocations of the lambda. SAVE THE MONEY!! Or detect potential attacks
    UserETLHandlerInvocationCountAlarm:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
        AlarmDescription: "Too many invocations have happened for this lambda function in a short period of time."
        AlarmName:
          UserETLHandler-${opt:stage, self:provider.stage}-InvocationCountAlarm
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Dimensions:
          - Name: FunctionName
            Value: UserETLHandler-${opt:stage, self:provider.stage}
        EvaluationPeriods: 1
        MetricName: "Invocations"
        Namespace: AWS/Lambda
        AlarmActions:
          - !Ref UserETLHandlerSNSTopic
        OKActions:
          - !Ref UserETLHandlerSNSTopic
        Period: 300
        Statistic: Sum
        Threshold: 500
        TreatMissingData: notBreaching

    UserETLHandlerMetricFilter:
      Type: "AWS::Logs::MetricFilter"
      DependsOn: UserETLHandlerLambdaFunction
      Properties:
        LogGroupName: "/aws/lambda/UserETLHandler-${opt:stage, self:provider.stage}"
        FilterPattern: "ERROR Exception"
        MetricTransformations:
          - MetricName: Errors-${opt:stage, self:provider.stage}
            MetricNamespace: UserSearch/UserETL
            MetricValue: 1

    UserETLHandlerMetricFilterAlarm:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
        AlarmDescription: "The UserETLHandler lambda metric filter has caught an error."
        AlarmName:
          UserETLHandler-${opt:stage, self:provider.stage}-MetricFilterAlarm
        ComparisonOperator: GreaterThanOrEqualToThreshold
        EvaluationPeriods: 1
        MetricName: Errors-${opt:stage, self:provider.stage}
        Namespace: UserSearch/UserETL
        AlarmActions:
          - !Ref UserETLHandlerSNSTopic
        OKActions:
          - !Ref UserETLHandlerSNSTopic
        Period: 300
        Statistic: Sum
        Threshold: 1
        TreatMissingData: notBreaching